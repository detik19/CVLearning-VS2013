// 03 Add TrackBack Slider.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <stdio.h>
#include <iostream>
#include <fstream>
#include "opencv\cv.h"
#include "opencv2\highgui\highgui.hpp"
using namespace std;
int g_slider_position = 0;
CvCapture* g_capture = NULL;

void onTrackBarSlide(int pos) {
	cvSetCaptureProperty(
		g_capture,
		CV_CAP_PROP_POS_FRAMES,
		pos
		);
}

int getAVIFrames(char * fname) {
	char tempSize[4];
	// Trying to open the video file
	ifstream  videoFile(fname, ios::in | ios::binary);
	// Checking the availablity of the file
	if (!videoFile) {
		cout << "Couldn’t open the input file " << fname << endl;
		exit(1);
	}
	// get the number of frames
	videoFile.seekg(0x30, ios::beg);
	videoFile.read(tempSize, 4);
	int frames = (unsigned char)tempSize[0] + 0x100 * (unsigned char)tempSize[1] + 0x10000 * (unsigned char)tempSize[2] + 0x1000000 * (unsigned char)tempSize[3];
	videoFile.close();
	return frames;
}

int _tmain(int argc, _TCHAR* argv[])
{
	cvNamedWindow("Example 3", CV_WINDOW_AUTOSIZE);
	g_capture = cvCreateFileCapture("D:\\Personal\\03 BEY\\BEY TV\\Dioda\\dioda2.avi");
	IplImage* frame;
	frames = 0;
	int frames = (int)cvGetCaptureProperty(
		g_capture,
		CV_CAP_PROP_FRAME_COUNT
		);
	if (frames != 0){
		cvCreateTrackbar(
			"Position",
			"Example3",
			&g_slider_position,
			frames,
			onTrackBarSlide
			);

	}
	

	while (1) {
		frame = cvQueryFrame(g_capture);
		if (!frame) break;
		//      int frames = cvGetCaptureProperty( g_capture, CV_CAP_PROP_POS_FRAMES);//This should work, sometimes it does not on linux
		frames++; //My cheat
		printf("\nFrame number=%d\n", frames);
		cvSetTrackbarPos("Position", "Example2_3", frames);
		cvShowImage("Example3", frame);
		char c = (char)cvWaitKey(10);
		if (c == 27) break;
	}
	cvReleaseCapture(&g_capture);
	cvDestroyWindow("Example3");
	

	return 0;
}

